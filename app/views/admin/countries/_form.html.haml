.js-item-container
  = simple_form_for([namespace, page.resource], html: { class: "form js-item-form" }) do |f|
    .admin-common-panel
      .row.admin-common-panel__header
        .col-xs-12
          %h5= t("administrate.details")

      .row.admin-common-panel__content
        .col-md-12
          - if f.object.persisted?
            .col-md-12.form-group
              = f.input :id, readonly: true, input_html: {class: "form-control"}

          .col-md-12.form-group
            = f.input :name, input_html: {class: "form-control"}
          %br

          .col-md-12.form-group
            = f.input :regional_group, required: false, input_html: {class: "form-control js-select2"},
              collection: Country.regional_groups.keys,
              placeholder: I18n.t("administrate.select_option",
                option: Country.human_attribute_name(:regional_group)),
              selected: f.object.regional_group,
              include_blank: true,
              label_method: -> (reg) { t("country.regional_groups")[reg.to_sym] }
          %br

          .col-md-12.form-group
            = f.input :state, required: false, input_html: {class: "form-control js-select2"},
              collection: Country.states.keys,
              placeholder: I18n.t("administrate.select_option",
                option: Country.human_attribute_name(:state)),
              selected: f.object.state,
              include_blank: true,
              label_method: -> (reg) { t("country.states")[reg.to_sym] }
          %br

          .col-md-12.form-group
            = f.input :school_id, required: false, input_html: {class: "form-control js-select2"},
              collection: School.all,
              placeholder: I18n.t("administrate.select_option",
                option: Country.human_attribute_name(:school)),
              selected: f.object.school,
              include_blank: true,
              label_method: -> (reg) { reg.try(:name) }
          %br

          .col-md-12.form-group
            = f.input :ag, 
                 :collection => [["Si", true],["No", false]], 
                 :label_method => :first, 
                 :value_method => :last,
                 :as => :radio_buttons, 
                 :item_wrapper_class => 'inline'
            %br

          .col-md-12.form-group
            = f.input :sti, 
                 :collection => [["Si", true],["No", false]], 
                 :label_method => :first, 
                 :value_method => :last,
                 :as => :radio_buttons, 
                 :item_wrapper_class => 'inline'
            %br

          .col-md-12.form-group
            = f.input :cs, 
                 :collection => [["Si", true],["No", false]], 
                 :label_method => :first, 
                 :value_method => :last,
                 :as => :radio_buttons, 
                 :item_wrapper_class => 'inline'
            %br

          .col-md-12.form-group
            = f.input :segib, 
                 :collection => [["Si", true],["No", false]], 
                 :label_method => :first, 
                 :value_method => :last,
                 :as => :radio_buttons, 
                 :item_wrapper_class => 'inline'
            %br

          .col-md-12.form-group
            = f.input :ecosoc, 
                 :collection => [["Si", true],["No", false]], 
                 :label_method => :first, 
                 :value_method => :last,
                 :as => :radio_buttons, 
                 :item_wrapper_class => 'inline'
            %br


        .col-xs-12
          .form-actions.mt20
            = button_tag(type: "submit", class:"btn btn-primary") do
              %span
                = submit_entity_label(f.object)
              %i.fa.fa-plus.ml5
            = link_to :back, class: "btn btn-default ml10" do
              %span
                = I18n.t("administrate.actions.back")
              %i.fa.fa-reply.ml5

